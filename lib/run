#!/bin/bash

set -e

homeport module <<-usage
    usage: homeport run
usage

trap cleanup EXIT SIGTERM SIGINT

function cleanup() {
    local pids=$(jobs -pr)
    [ -n "$pids" ] && kill $pids
}

boot2docker='-t'

docker='docker run '
docker+='--rm -it '
docker+='-u '$homeport_unix_user' '
docker+='--volumes-from '$homeport_home_volume' '

declare argv
argv=$(getopt --options +v:p:A --long volumes-from:,link:,name:,rm -- "$@") || exit 1
eval "set -- $argv"

homeport_tag=default
homeport_unix_user=$USER

while true; do
    case "$1" in
        --rm)
            docker+="$1"' '
            shift
            ;;
        -v | -p | --volumes-from | --link | --name)
            docker+="$1"' '"$2"' '
            shift
            shift
            ;;
        -A)
            boot2docker+='A'
            docker+='-v $(readlink -f $SSH_AUTH_SOCK):/home/'$homeport_unix_user/.ssh-agent' '
            docker+='-e SSH_AUTH_SOCK=/home/'$homeport_unix_user'/.ssh-agent '
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

docker+='-h homeport '
docker+=$homeport_image_name

if [ $# -eq 0 ]; then
    docker+=' /home/'$homeport_unix_user'/.homeportrc'
else
    while [ $# -ne 0 ]; do
        docker+=' '$(printf '%q' "$1")
        shift
    done
fi

if which boot2docker > /dev/null; then
    boot2docker ssh "$boot2docker" sh -c $(printf '%q' "$docker")
else
    $launch
fi
