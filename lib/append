#!/bin/bash

set -e

homeport module <<-usage
    usage: homeport append

    options:

        -t, --tag <string>
            an optional tag for the image so you can create different images
usage

declare argv
argv=$(getopt -o t: --long tag: -- "$@") || return
eval "set -- $argv"

homeport_tag=default

while true; do
    case "$1" in
        --tag | -t)
            shift
            homeport_tag=$1
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

eval $(homeport_configuration $homeport_tag)

trap cleanup EXIT SIGTERM SIGINT

function cleanup() {
    local pids=$(jobs -pr)
    [ -n "$pids" ] && kill $pids
    rm -rf "$dir"
}

dir=$(mktemp -d -t homeport_append)

mkdir "$dir/src/" && \
    rsync -a "$HOMEPORT_PATH/" "$dir/src/" || abend "cannot create source archive"

mkdir -p "$dir/src/packages/formula"
while [ $# -ne 0 ]; do
    package=$1
    shift
    if [[ "$package" = */* ]]; then
    echo "$package"
        relative="packages/formula/${package##*/}"
        cp "$package" "$dir/src/$relative"
        package="/usr/share/homeport/$relative"
    fi
    echo "$package" >> "$dir/src/packages/manifest"
done

cat <<EOF > "$dir/Dockerfile"
FROM $homeport_docker_hub_account/homeport_shell-$homeport_tag:latest

MAINTAINER Alan Gutierrez, alan@prettyrobots.com

COPY ./src/ /usr/share/homeport/
RUN /usr/share/homeport/container/install
EOF

docker build -t $homeport_docker_hub_account/homeport_shell-$homeport_tag:intermediate "$dir"

docker tag -f $homeport_docker_hub_account/homeport_shell-$homeport_tag:intermediate \
    $homeport_docker_hub_account/homeport_shell-$homeport_tag:latest

docker tag -f $homeport_docker_hub_account/homeport_shell-$homeport_tag homeport_shell-$homeport_tag:$USER
docker rmi $homeport_docker_hub_account/homeport_shell-$homeport_tag:intermediate
